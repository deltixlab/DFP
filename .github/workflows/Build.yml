name: Build CI

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:

  build-native-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: build
        run: |
          sudo apt install -yqq g++-9-arm-linux-gnueabihf \
                                g++-9-aarch64-linux-gnu \
                                g++-9-i686-linux-gnu
          cd ..
          mkdir llvm
          cd llvm
          curl -OL https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang+llvm-12.0.0-armv7a-linux-gnueabihf.tar.xz
          curl -OL https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang+llvm-12.0.0-aarch64-linux-gnu.tar.xz
          curl -OL https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang+llvm-12.0.0-i386-unknown-freebsd12.tar.xz
          tar -xf clang+llvm-12.0.0-armv7a-linux-gnueabihf.tar.xz
          tar -xf clang+llvm-12.0.0-aarch64-linux-gnu.tar.xz
          tar -xf clang+llvm-12.0.0-i386-unknown-freebsd12.tar.xz
          ls -al
          cd ../DFP/
          ls -al
          ./gradlew makeNativeLinux
          ./gradlew makeNativeWrappers
      - uses: actions/upload-artifact@v2
        with:
          name: build-native-linux
          path: |
            ./*native/bin*
            ./*java/build/generated/sources/nativeWrappers/com/epam/deltix/dfp*
            ./csharp/EPAM.Deltix.DFP/NativeImpl.cs
            ./csharp/EPAM.Deltix.DFP/Version.targets
          retention-days: 7

  build-native-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Use MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: build
        run: |
          ./gradlew makeNativeWindows
      - uses: actions/upload-artifact@v2
        with:
          name: build-native-windows
          path: |
            ./*native/bin*
          retention-days: 7

  build-native-macos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: build
        run: |
          sudo apt install clang make libssl-dev liblzma-dev libxml2-dev fuse
          cd ./osxcross/tarballs/
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz
          cd ..
          UNATTENDED=yes OSX_VERSION_MIN=10.7 JOBS=4 ./build.sh
          cd ..
          ./gradlew makeNativeDarwin
      - uses: actions/upload-artifact@v2
        with:
          name: build-native-macos
          path: |
            ./*native/bin*
          retention-days: 7

  compress-native:
    runs-on: ubuntu-latest
    needs: [build-native-linux, build-native-windows, build-native-macos]
    steps:
      - uses: actions/checkout@v2
      - name: Download native-linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-native-linux
      - name: Download native-windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-native-windows
      - name: Download native-macos artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-native-macos
      - name: compress
        run: |
          zstd --version
          zstd -19 --rm -r ./native/bin
      - uses: actions/upload-artifact@v2
        with:
          name: compress-native
          path: |
            ./gradle.properties
            ./*native/bin*
            ./*java/build/generated/sources/nativeWrappers/com/epam/deltix/dfp*
            ./csharp/EPAM.Deltix.DFP/NativeImpl.cs
            ./csharp/EPAM.Deltix.DFP/Version.targets
          retention-days: 7

  build-java:
    runs-on: ubuntu-latest
    needs: [compress-native]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download compress-native artifacts
        uses: actions/download-artifact@v2
        with:
          name: compress-native
      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: build
        run: |
          ./gradlew jar
      - uses: actions/upload-artifact@v2
        with:
          name: java-jars
          path: |
            ./*java/build/libs/*
            ./*javaDecimalDemo/build/libs/*
          retention-days: 7

  build-dotnet:
    runs-on: windows-latest
    needs: [compress-native]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download compress-native artifacts
        uses: actions/download-artifact@v2
        with:
          name: compress-native
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.8.1
        with:
          dotnet-version: '3.1.x'
      - name: build
        run: |
          cd csharp
          ./build -Target Build
      - uses: actions/upload-artifact@v2
        with:
          name: dotnet-build
          path: |
            ./*csharp/EPAM.Deltix.DFP/bin/Release/*
            ./*csharp/EPAM.Deltix.DFP.Demo/bin/Release/*
          retention-days: 7

  test-java:
    runs-on: ${{ matrix.os }}
    needs: [compress-native]
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest']
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download compress-native artifacts
        uses: actions/download-artifact@v2
        with:
          name: compress-native
      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: test
        run: |
          ./gradlew check
      - name: Upload test results on failure
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          path: |
            java/build/reports/*
          name: Java-8-${{ matrix.os }}-TestReports

  test-dotnet:
    runs-on: ${{ matrix.os }}
    needs: [compress-native]
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest']
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Download compress-native artifacts
        uses: actions/download-artifact@v2
        with:
          name: compress-native
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.8.1
        with:
          dotnet-version: '3.1.x'
      - name: test windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd csharp
          ./build --target=Run-Unit-Tests
      - name: test nix
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: |
          cd csharp
          ./build.sh --target=Run-Unit-Tests
      - name: Upload test results on failure
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          path: |
            csharp/EPAM.Deltix.DFP/bin/*
            csharp/*.txt
            csharp/*.xml
          name: Dotnet-3.1-${{ matrix.os }}-TestReports
